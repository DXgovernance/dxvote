{
  "cache": {
    "fromBlock": 3995726,
    "ipfsHash": "QmXavj3tchxsqpXCPB4g18NikoyGd2c22syDF4Sijn3f8n",
    "toBlock": "11296050"
  },
  "contracts": {
    "avatar": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
    "controller": "0x91509d26D0218D15C19eB341a25B57f302792765",
    "permissionRegistry": "0x13f3A639f4c83723675672B2C7084413eea01D48",
    "reputation": "0x12cCaa029F525fB4262e40D1a6dDdf2817af3fE9",
    "token": "0x5d47100B0854525685907D5D773b92c22c0c745e",
    "utils": {
      "dxDaoNFT": "0xDC50FE5862D5541C6D0b9B07f15Fe016Cdacb431",
      "dxdVestingFactory": "0xA5431A66874627948d4Ab68E033177f8982C3A2C",
      "multicall": "0xac380E8434Db942B5902956E8Dc7cD9d6A66bc74"
    },
    "votingMachines": {
      "0x5786e7a0A1aB6a4040a77fcbcD144E649A6d4939": {
        "token": "0x5d47100B0854525685907D5D773b92c22c0c745e",
        "type": "DXDVotingMachine"
      }
    }
  },
  "proposalTemplates": [
    {
      "description": "# Background\n \n - If this is your first contributor proposal, state any context for making the proposal, including:\n - What position you will be filling – i.e. developer, marketing, governance, etc.\n - Who you have been in contact with regarding the position (add their DAOtalk usernames)\n - If you are a continuing contributor, state which products and areas you are working on / any other relevant background information\n # Timeframe\n \n - State the date range, typically 2 months (2.5 months for first-time workers)\n # Scope of Contribution\n \n - **Goals** :\n - State the products and /or strategy areas you will be working under. E.g. Omen and Governance. Include both short-term goals that you seek to accomplish during the working period and long-term goals.\n - **Responsibilities:**\n - List the specific deliverables you will be either completing and / or working on during the working period. Try to state which deliverables you intend to complete within the period and which are long-term or ongoing projects.\n \n # Reflection\n \n - If You Are A Returning Contributor, Write a Self-Reflection\n - State what you did well, what you did okay, and what you need to improve on\n # Compensation\n \n - Experience Level : 1-5\n - Time commitment :  Percent (%) of time\n - [ETH/DAI AMT] : For 2 months of work at level [LEVEL], to be sent half on the first payment proposal and half on the second payment proposal\n - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n - [% AMT REP] : For 2 months of work , to be sent half on the first payment proposal and half on the second payment proposal\n # Work Experience\n \n - Prior DXdao work proposals (if applicable)\n - Past Work for DXdao\n - If a developer, Github links\n - If a non-tech worker, doc links or described deliverables\n - If new, past relevant work experience\n - Developers : Github profile link\n - Non-tech : suggested Linkedin / other references\n",
      "name": "Contributor Proposal",
      "title": "[NAME] Contributor Proposal [DATE - DATE]"
    },
    {
      "description": "# Timeframe\n \n - State the contributor proposal date range\n \n # Background\n \n - State the context for making the contributor payment proposal, including:\n - What position you will be filling – i.e. developer, marketing, governance, etc.\n - Proposed Scope of Contribution\n - Self-Reflection on Scope of Contribution\n - Include the URL to the original proposal forum post\n \n # Deliverables\n\n - Include information around deliverables that were completed during your worker period\n \n # Compensation\n\n - Experience Level : 1-5\n - Time commitment : Percent (%) of time\n - [ETH/DAI AMT] : For second half payment proposal\n - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n - [% AMT REP]: For 2 second half payment proposal\n \n # Work Experience\n \n - Prior DXdao work proposals (if applicable)\n - Past Work for DXdao\n - If a developer, Github links\n - If a non-tech worker, doc links or described\n - If new, past relevant work experience\n - Developers : Github profile link\n - Non-tech : suggested Linkedin / other references\n \n",
      "name": "Payment Proposal",
      "title": "[NAME] Payment Proposal [DATE - DATE]"
    },
    {
      "description": "## Description \n\n## Proposition \n\n## Action Plan",
      "name": "Signal Proposal",
      "title": "Signal Proposal for [DAO_ACTION]"
    },
    {
      "calls": [
        {
          "functionName": "approve(address,uint256)",
          "params": [
            "0xecA7F78d59D16812948849663b26FE10E320f80C",
            ""
          ],
          "to": "0xdE903E2712288A1dA82942DDdF2c20529565aC30"
        },
        {
          "functionName": "createDistribution(address[],address,uint256[],uint64,uint64,bool,uint256)",
          "params": [
            "[0xdE903E2712288A1dA82942DDdF2c20529565aC30]",
            "",
            "[]",
            "",
            "",
            "false",
            "0"
          ],
          "to": "0xecA7F78d59D16812948849663b26FE10E320f80C"
        }
      ],
      "description": "Simple description",
      "name": "SWPR Farming Campaign",
      "title": "[PAIR X/Y] Farming Campaign [DATE - DATE]]"
    }
  ],
  "proposalTypes": [
    {
      "id": "custom",
      "title": "Custom"
    }
  ],
  "recommendedCalls": [
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set vote refund to [PARAM_0] gas and [PARAM_1] max gas price",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setOrganizationRefund(uint256,uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_voteGas",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "to": "0x5786e7a0A1aB6a4040a77fcbcD144E649A6d4939",
      "toName": "DXD Voting Machine"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set boosted required percentage for scheme [PARAM_0] to ([PARAM_2]/100) %",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setBoostedVoteRequiredPercentage(address,bytes32,uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_scheme",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "_paramsHash",
          "type": "bytes32"
        },
        {
          "defaultValue": "",
          "name": "_boostedVotePeriodLimit",
          "type": "uint256"
        }
      ],
      "to": "0x5786e7a0A1aB6a4040a77fcbcD144E649A6d4939",
      "toName": "DXD Voting Machine"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set max seconds for execution in Registrar Wallet Scheme to [PARAM_0] seconds",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setMaxSecondsForExecution(uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_maxSecondsForExecution",
          "type": "uint256"
        }
      ],
      "to": "0x3d432D43805AF80733CF492b6C42DB0ff3eB185e",
      "toName": "RegistrarWalletScheme"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set max seconds for execution in Master Wallet Scheme to [PARAM_0] seconds",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setMaxSecondsForExecution(uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_maxSecondsForExecution",
          "type": "uint256"
        }
      ],
      "to": "0x39405F3f7F2c3E72c1B21544F2539fAD83F7dD4c",
      "toName": "MasterWalletScheme"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set max seconds for execution in Quick Wallet Scheme to [PARAM_0] seconds",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setMaxSecondsForExecution(uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_maxSecondsForExecution",
          "type": "uint256"
        }
      ],
      "to": "0x8a6428Ccb48FFEb8619cbc18a479feCA22d784d3",
      "toName": "QuickWalletScheme"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set max seconds for execution in Quick Wallet Scheme to [PARAM_0] seconds",
      "from": "0x6370B3Ba7D9bAd94b35dC9073540E562bDe5Fdc3",
      "functionName": "setMaxSecondsForExecution(uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "_maxSecondsForExecution",
          "type": "uint256"
        }
      ],
      "to": "0xA28A7e5D8E4BE7175aCB817D5b89ED88bD1e30B5",
      "toName": "SWPRWalletScheme"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Transfer swpr pair [PARAM_0] ownership to [PARAM_1]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "transferPairOwnership(address,address)",
      "params": [
        {
          "defaultValue": "",
          "name": "pair",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "to": "0x876BE4A79d154d4B2edE7c593B2E048756049B26",
      "toName": "Swpr Fee Setter"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set swpr protocol fee denominator to [PARAM_0]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "setProtocolFee(uint8)",
      "params": [
        {
          "defaultValue": "",
          "name": "protocolFeeDenominator",
          "type": "uint8"
        }
      ],
      "to": "0x876BE4A79d154d4B2edE7c593B2E048756049B26",
      "toName": "Swpr Fee Setter"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Set swpr fee for pair [PARAM_0] to [PARAM_1]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "setSwapFee(address,uint32)",
      "params": [
        {
          "defaultValue": "",
          "name": "pair",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "swapFee",
          "type": "uint32"
        }
      ],
      "to": "0x876BE4A79d154d4B2edE7c593B2E048756049B26",
      "toName": "Swpr Fee Setter"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Take protocol fee from swpr pairs [PARAM_0]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "takeProtocolFee(address[])",
      "params": [
        {
          "defaultValue": "",
          "name": "pairs",
          "type": "address[]"
        }
      ],
      "to": "0xB01988E0039230B52256BB4Db4496a6C79092B4f",
      "toName": "Swpr Fee Receiver"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Add liquidity with [PARAM_2] value of token [PARAM_0] and [PARAM_4] value of token [PARAM_1] to address [PARAM_6]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "tokenA",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "tokenB",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "to",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "to": "0xb5a35165047fed7440D3a75909c0949bf1943696",
      "toName": "Swpr Router"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Remove and send [PARAM_2] liquidity tokens from pool with tokens [PARAM_0] - [PARAM_1] to address [PARAM_5]",
      "from": "0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa",
      "functionName": "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "tokenA",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "tokenB",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "defaultValue": "",
          "name": "to",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "to": "0xb5a35165047fed7440D3a75909c0949bf1943696",
      "toName": "Swpr Router"
    },
    {
      "asset": "0x0000000000000000000000000000000000000000",
      "decodeText": "Create liquidity mining campaign on pair [PARAM_1] starting at [PARAM_3] and ending at [PARAM_4], with reward tokens [PARAM_0], reward amounts [PARAM_2]. Cap put at [PARAM_6] and locked status [PARAM_5]",
      "from": "0xA28A7e5D8E4BE7175aCB817D5b89ED88bD1e30B5",
      "functionName": "createDistribution(address[],address,uint256[],uint64,uint64,bool,uint256)",
      "params": [
        {
          "defaultValue": "",
          "name": "rewardTokensAddresses",
          "type": "address[]"
        },
        {
          "defaultValue": "",
          "name": "stakableTokenAddress",
          "type": "address"
        },
        {
          "defaultValue": "",
          "name": "rewardAmounts",
          "type": "uint256[]"
        },
        {
          "defaultValue": "",
          "name": "startingTimestamp",
          "type": "uint64"
        },
        {
          "defaultValue": "",
          "name": "endingTimestamp",
          "type": "uint64"
        },
        {
          "defaultValue": "",
          "name": "locked",
          "type": "bool"
        },
        {
          "defaultValue": "",
          "name": "stakingCap",
          "type": "uint256"
        }
      ],
      "to": "0x41e657cAdE74f45b7E2F0F4a5AeE0239f2fB4E1F",
      "toName": "Swapr liquidity mining campaigns factory"
    }
  ],
  "tokens": [
    {
      "address": "0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681",
      "decimals": 18,
      "fetchPrice": true,
      "logoURI": "https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e/logo.png",
      "name": "Wrapped Ether",
      "symbol": "WETH"
    },
    {
      "address": "0x5d47100B0854525685907D5D773b92c22c0c745e",
      "decimals": 18,
      "fetchPrice": true,
      "logoURI": "https://assets.coingecko.com/coins/images/11148/thumb/dxdao.png?1607999331",
      "name": "DXdao",
      "symbol": "DXD"
    },
    {
      "address": "0x8f2072c2142D9fFDc785955E0Ce71561753D44Fb",
      "decimals": 18,
      "fetchPrice": true,
      "logoURI": "https://ipfs.io/ipfs/QmWF6nPb4y2DehfGRzKGaekXQzShSQ11uzMNmxsLJQxBUQ",
      "name": "SWPR Token",
      "symbol": "SWPR"
    },
    {
      "address": "0x5c6e8F8B4f657b1aC81BFA1aF9145ed048bB1E48",
      "decimals": 18,
      "fetchPrice": true,
      "name": "Weenus",
      "symbol": "WEENUS"
    },
    {
      "address": "0xE76c8D027f54882ab1B0Ae8C193ac4Cb791A456a",
      "decimals": 18,
      "fetchPrice": true,
      "name": "Xeenus",
      "symbol": "XEENUS"
    },
    {
      "address": "0x409318c1a5b3Abd1058fe4b91402268A26b9b159",
      "decimals": 8,
      "fetchPrice": true,
      "name": "Yeenus",
      "symbol": "YEENUS"
    }
  ],
  "version": 1
}